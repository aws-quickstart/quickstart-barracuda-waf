AWSTemplateFormatVersion: '2010-09-09'
Description: This master template deploys 2 Barracuda Cloud Gen WAFs for a multi-AZ, multi-tier
  deployment. It deploys to an existing VPC behind an ALB. The cluster is configured to use an S3 bucket for storage.   
  Attention **WARNING** This template creates EC2 instances and related resources. You will be billed for
  the AWS resources used if you create a stack from this template.
Metadata:
  AWS::CloudFormation::Interface:
    ParameterGroups:
    - Label:
        default: Network configuration
      Parameters:
      #- AvailabilityZones
      - VPCCIDR
      - PrivateSubnet1ACIDR
      - PrivateSubnet2ACIDR
      - PublicSubnet1CIDR
      - PublicSubnet2CIDR
    - Label:
        default: Barracuda WAF EC2 configuration
      Parameters:
      - KeyPairName
      - WAFInstanceType
      - AdministratorName
      - AdministratorEmailID
      - AdministratorCompany
    - Label:
        default: WAF nodes configuration
      Parameters:
      - ScalingMinSize
      - ScalingMaxSize
    - Label:
        default: WAF storage configuration
      Parameters:
      - LicenseBucket
      - CudaLicenseSubDir
    - Label:
        default: AWS Quick Start configuration
      Parameters:
      - QSS3BucketName
      - QSS3BucketRegion
      - QSS3KeyPrefix
    ParameterLabels:
      AvailabilityZones:
        default: Availability Zones
      KeyPairName:
        default: Key pair name
      OperatorEmail:
        default: Operator email
      PrivateSubnet1ACIDR:
        default: Private subnet 1 CIDR
      PrivateSubnet2ACIDR:
        default: Private subnet 2 CIDR
      PublicSubnet1CIDR:
        default: Public subnet 1 CIDR
      PublicSubnet2CIDR:
        default: Public subnet 2 CIDR
      LicenseBucket:
        default: S3 bucket for WAF Licenses
      CudaLicenseSubDir:
        default: The license directory
      VPCCIDR:
        default: VPC CIDR
      WAFInstanceType:
        default: WAF servers instance type
      QSS3BucketName:
        default: Quick Start S3 Bucket Name
      QSS3BucketRegion:
        default: Quick Start S3 bucket region
      QSS3KeyPrefix:
        default: Quick Start S3 Key Prefix
Parameters:
  EnvironmentName:
    Description: An environment name that is prefixed to resource names
    Type: String
  #LicenseBucket:
  #  AllowedPattern: ^[0-9a-zA-Z]+([0-9a-zA-Z-]*[0-9a-zA-Z])*$
  #  ConstraintDescription: The S3 bucket with your Barracuda CloudGen WAF License files.
  #  Description: S3 bucket name for the Quick Start assets. This string can include
  #    numbers, lowercase letters, uppercase letters, and hyphens (-). It cannot start
   #   or end with a hyphen (-).
   # Type: String
 # CudaLicenseSubDir:
   # Type: String
  #  AllowedPattern: "[^\\s]*"
  #  Description: 'Specify the folder on the specified License S3 Bucket which contains
   #   the BYOL License File. Leave blank if there is no specific folder for Licenses
  #    on the S3 Bucket. Examples: Barracuda/Licenses(Two level folder structure),
  #    BarracudaBYOLLicenses(One level folder structure).'
  AvailabilityZones:
    Description: The list of Availability Zones to use for the subnets in the VPC. Three
      Availability Zones are used for this deployment, and the logical order of your
      selections is preserved.
    Type: List<AWS::EC2::AvailabilityZone::Name>
  KeyPairName:
    Description: The name of an existing public/private key pair, which allows you
      to securely connect to your instance after it launches
    Type: AWS::EC2::KeyPair::KeyName
  NumberOfAZs:
    AllowedValues:
      - '2'
    Default: '2'
    Description: Number of Availability Zones to use in the VPC. This must match your
      selections in the list of Availability Zones parameter.
    Type: String
  PrivateSubnet1ACIDR:
    AllowedPattern: ^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\/(1[6-9]|2[0-8]))$
    ConstraintDescription: CIDR block parameter must be in the form x.x.x.x/16-28
    Default: 10.0.0.0/19
    Description: CIDR block for private subnet 1A located in Availability Zone 1
    Type: String
  PrivateSubnet2ACIDR:
    AllowedPattern: ^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\/(1[6-9]|2[0-8]))$
    ConstraintDescription: CIDR block parameter must be in the form x.x.x.x/16-28
    Default: 10.0.32.0/19
    Description: CIDR block for private subnet 2A located in Availability Zone 2
    Type: String
  PublicSubnet1CIDR:
    AllowedPattern: ^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\/(1[6-9]|2[0-8]))$
    ConstraintDescription: CIDR block parameter must be in the form x.x.x.x/16-28
    Default: 10.0.128.0/20
    Description: CIDR block for the public (DMZ) subnet 1 located in Availability
      Zone 1
    Type: String
  PublicSubnet2CIDR:
    AllowedPattern: ^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\/(1[6-9]|2[0-8]))$
    ConstraintDescription: CIDR block parameter must be in the form x.x.x.x/16-28
    Default: 10.0.144.0/20
    Description: The CIDR block for the public (DMZ) subnet 2 located in Availability
      Zone 2
    Type: String
  VPCCIDR:
    AllowedPattern: ^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\/(1[6-9]|2[0-8]))$
    ConstraintDescription: CIDR block parameter must be in the form x.x.x.x/16-28
    Default: 10.0.0.0/16
    Description: The CIDR block for the VPC
    Type: String
  AdministratorName:
    ConstraintDescription: Must be a valid name with 2 - 64 characters.
    MinLength: '2'
    MaxLength: '64'
    Type: String
  AdministratorEmailID:
    Type: String
    AllowedPattern: ([a-zA-Z0-9_+\-\.]+)@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.)|(([a-zA-Z0-9\-]+\.)+))([a-zA-Z]{2,4}|[0-9]{1,3})(\]?)
    ConstraintDescription: Must be a valid email address.
  AdministratorCompany:
    Default: None
    Type: String
    ConstraintDescription: Must be a valid company name with 2 - 64 characters.
    MinLength: '2'
    MaxLength: '64'
    Description: By entering the Name, Email Address and Company (if applicable) above
      you agree to terms and conditions outlined in the product End User License Agreement
      (https://www.barracuda.com/legal/software_license_agreement) and Privacy Policy
      (https://www.barracuda.com/legal/privacy).
  ScalingMinSize:
    Description: Enter the minimum number of WAF instances (1-20) to be available
      in the AutoScale Group
    Default: '1'
    ConstraintDescription: Must be a number between 1-20
    Type: Number
    MaxValue: '20'
    MinValue: '1'
  ScalingMaxSize:
    Description: Enter the maximum number of WAF instances (2-20) that can be created
      in the AutoScale Group
    Default: '4'
    ConstraintDescription: Must be a number between 2-20.
    Type: Number
    MaxValue: '20'
    MinValue: '2'
  #NotificationEmail:
   #  Description: Enter a valid email address to send AutoSclaing Event Notifications
   #  Type: String
   #  AllowedPattern: "([a-zA-Z0-9_\\-\\.]+)@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.)|(([a-zA-Z0-9\\-]+\\.)+))([a-zA-Z]{2,4}|[0-9]{1,3})(\\]?)"
   #  ConstraintDescription: Must be a valid email address.
  WAFServiceName:
    Description: Specify the Service Name to be configured on the Barracuda Web Application
      Firewall
    AllowedPattern: "[0-9a-zA-Z-_]*"
    MinLength: '2'
    MaxLength: '64'
    Type: String
  WAFServicePort:
    Description: Specify the Service Port to be configured on the Barracuda Web Application
      Firewall. This the port that is exposed to the outside world. Default is 80.
    Default: '80'
    ConstraintDescription: Must be a valid port number (1-65535).
    Type: Number
    MaxValue: '65535'
    MinValue: '1'
  #WAFServerIP:
    #Description: Specify the Server IP (inside the VPC) to be configured on the Barracuda
    #  Web Application Firewall; alternatively, you can also enter the FQDN of the
    #  instance or a downstream ELB to connect to.
    #ConstraintDescription: Must be a valid IP address or FQDN
    #MinLength: '7'
    #MaxLength: '65535'
    #Type: String
  AppServerPort:
    Description: Specify the port number on which the web application responds. This
      is the port that the Barracuda Web Application Firewall will use to connect
      to the application
    ConstraintDescription: Must be a valid port number (1-65535).
    Type: Number
    MaxValue: '65535'
    MinValue: '1'
  QSS3BucketName:
    AllowedPattern: ^[0-9a-zA-Z]+([0-9a-zA-Z-]*[0-9a-zA-Z])*$
    ConstraintDescription: Quick Start bucket name can include numbers, lowercase
      letters, uppercase letters, and hyphens (-). It cannot start or end with a hyphen
      (-).
    Default: aws-quickstart
    Description: S3 bucket name for the Quick Start assets. This string can include
      numbers, lowercase letters, uppercase letters, and hyphens (-). It cannot start
      or end with a hyphen (-).
    Type: String
  QSS3BucketRegion:
    Default: 'us-east-1'
    Description: The AWS Region where the Quick Start S3 bucket (QSS3BucketName) is
      hosted. When using your own bucket, you must specify this value.
    Type: String
  QSS3KeyPrefix:
    AllowedPattern: ^[0-9a-zA-Z-/]*$
    ConstraintDescription: Quick Start key prefix can include numbers, lowercase letters,
      uppercase letters, hyphens (-), and forward slash (/).
    Default: quickstart-barracuda-waf/
    Description: S3 key prefix for the Quick Start assets. Quick Start key prefix
      can include numbers, lowercase letters, uppercase letters, hyphens (-), and
      forward slash (/).
    Type: String
  WAFInstanceType:
    Default: m4.large
    ConstraintDescription: 'Choose from the following EC2 instance types: m4.large, m4.xlarge, m4.2xlarge'
    Type: String
    Description: Choose the instance type to use for this AutoScale group
    AllowedValues:
    - m4.large
    - m4.xlarge
    - m4.2xlarge
Mappings:
  RegionMap:
    us-east-1:
      ImageID: ami-03fe3d14505dfefdc
    us-east-2:
      ImageID: ami-0db89527496f6a87c
    us-west-1:
      ImageID: ami-0905e9dc8bb4b91c3
    us-west-2:
      ImageID: ami-070c2823862ff8ea8
    sa-east-1:
      ImageID: ami-0d589d10080d50f15
    ca-central-1:
      ImageID: ami-0bbc0d3b5501bb030
    eu-central-1:
      ImageID: ami-02c48ef8defdf0379
    eu-west-1:
      ImageID: ami-0bdc3bc93d8d4d6e2
    eu-west-2:
      ImageID: ami-0262b6949aa7f1529
    ap-southeast-1:
      ImageID: ami-0b7e14f3f77f1f55b
    ap-southeast-2:
      ImageID: ami-01dcf361a2d252a63
    ap-northeast-1:
      ImageID: ami-040482863065d9111
    ap-northeast-2:
      ImageID: ami-0121574171fcb226a
    ap-south-1:
      ImageID: ami-0e458de57cabe8f84
  BandwidthScaleUp:
    medium:
      bandwidth: '8750000'
    large:
      bandwidth: '17500000'
    xlarge:
      bandwidth: '35000000'
    xxlarge:
      bandwidth: '65630000'
  BandwidthScaleDown:
    medium:
      bandwidth: '8750000'
    large:
      bandwidth: '17500000'
    xlarge:
      bandwidth: '35000000'
    xxlarge:
      bandwidth: '65630000'
Conditions:
  UsingDefaultBucket: !Equals [!Ref QSS3BucketName, 'aws-quickstart']
Resources:
  VPCStack:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: !Sub
        - 'https://${S3Bucket}.s3.${S3Region}.${AWS::URLSuffix}/${QSS3KeyPrefix}submodules/quickstart-aws-vpc/templates/aws-vpc.template.yaml'
        - S3Region: !If [UsingDefaultBucket, !Ref 'AWS::Region', !Ref QSS3BucketRegion]
          S3Bucket: !If [UsingDefaultBucket, !Sub '${QSS3BucketName}-${AWS::Region}', !Ref QSS3BucketName]
      Parameters:
        AvailabilityZones: !Join [ ',', !Ref 'AvailabilityZones' ]
        KeyPairName: !Ref 'KeyPairName'
        NumberOfAZs: !Ref 'NumberOfAZs'
        PrivateSubnet1ACIDR: !Ref 'PrivateSubnet1ACIDR'
        PrivateSubnet2ACIDR: !Ref 'PrivateSubnet2ACIDR'
        PrivateSubnetATag1: "Name=barracuda-private-subnet-az1"
        PrivateSubnetATag2: "Name=barracuda-private-subnet-az2"
        PublicSubnet1CIDR: !Ref 'PublicSubnet1CIDR'
        PublicSubnet2CIDR: !Ref 'PublicSubnet2CIDR'
        PublicSubnetTag1: "Name=barracuda-public-subnet-az1"
        PublicSubnetTag2: "Name=barracuda-public-subnet-az2"
        CreateNATGateways: 'false'
        VPCCIDR: !Ref 'VPCCIDR'
  AutoScalingS3Bucket:
    Type: AWS::S3::Bucket
    DeletionPolicy: Retain
    UpdateReplacePolicy: Retain
    Properties:
      AccessControl: Private
      VersioningConfiguration:
        Status: Enabled
      BucketEncryption:
        ServerSideEncryptionConfiguration:
          - ServerSideEncryptionByDefault:
              SSEAlgorithm: AES256
      BucketName: !Sub ${EnvironmentName}-${WAFServiceName}-barracuda-autoscaling
  ClusterBucket:
    Type: AWS::S3::Bucket
    DeletionPolicy: Retain
    UpdateReplacePolicy: Retain
    Properties:
      AccessControl: Private
      VersioningConfiguration:
        Status: Enabled
      BucketEncryption:
        ServerSideEncryptionConfiguration:
          - ServerSideEncryptionByDefault:
              SSEAlgorithm: AES256
      BucketName: !Sub ${EnvironmentName}-${WAFServiceName}-barracuda-cluster
  BootstrapBucket:
    Type: AWS::S3::Bucket
    DeletionPolicy: Retain
    UpdateReplacePolicy: Retain
    Properties:
      AccessControl: Private
      VersioningConfiguration:
        Status: Enabled
      BucketEncryption:
        ServerSideEncryptionConfiguration:
          - ServerSideEncryptionByDefault:
              SSEAlgorithm: AES256
      BucketName: !Sub ${EnvironmentName}-${WAFServiceName}-barracuda-bootstrap
  BWAFSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupName: "basic-sg"
      GroupDescription: "Security group for Barracuda CloudGen WAF"
      VpcId: !GetAtt VPCStack.Outputs.VPCID
      SecurityGroupIngress:
        - 
          IpProtocol: tcp
          FromPort: 8000
          ToPort: 8000
          CidrIp: 0.0.0.0/0
        -
          IpProtocol: tcp
          FromPort: 8002
          ToPort: 8002
          CidrIp: 0.0.0.0/0
        - 
          IpProtocol: tcp
          FromPort: 32575
          ToPort: 32575
          CidrIp: 0.0.0.0/0
        -
          IpProtocol: udp
          FromPort: 32576
          ToPort: 32576
          CidrIp: 0.0.0.0/0
        -
          IpProtocol: tcp
          FromPort: 8443
          ToPort: 8443
          CidrIp: 0.0.0.0/0
        - 
          IpProtocol: tcp
          FromPort:
            Ref: WAFServicePort
          ToPort:
            Ref: WAFServicePort
          CidrIp: 0.0.0.0/0
        -
          IpProtocol: tcp
          FromPort: 80
          ToPort: 80
          CidrIp: !GetAtt VPCStack.Outputs.PrivateSubnet1ACIDR
        -
          IpProtocol: tcp
          FromPort: 80
          ToPort: 80
          CidrIp: !GetAtt VPCStack.Outputs.PrivateSubnet2ACIDR
        -
          IpProtocol: tcp
          FromPort: 8000
          ToPort: 8000
          CidrIp: !GetAtt VPCStack.Outputs.PrivateSubnet1ACIDR
        -
          IpProtocol: tcp
          FromPort: 8000
          ToPort: 8000
          CidrIp: !GetAtt VPCStack.Outputs.PrivateSubnet2ACIDR
        -
          IpProtocol: tcp
          FromPort: 8080
          ToPort: 8080
          CidrIp: !GetAtt VPCStack.Outputs.PrivateSubnet1ACIDR
        -
          IpProtocol: tcp
          FromPort: 8080
          ToPort: 8080
          CidrIp: !GetAtt VPCStack.Outputs.PrivateSubnet2ACIDR
        -
          IpProtocol: tcp
          FromPort: 443
          ToPort: 443
          CidrIp: !GetAtt VPCStack.Outputs.PrivateSubnet1ACIDR
        -
          IpProtocol: tcp
          FromPort: 443
          ToPort: 443
          CidrIp: !GetAtt VPCStack.Outputs.PrivateSubnet2ACIDR
        -
          IpProtocol: tcp
          FromPort: 8443
          ToPort: 8443
          CidrIp: !GetAtt VPCStack.Outputs.PrivateSubnet1ACIDR
        -
          IpProtocol: tcp
          FromPort: 8443
          ToPort: 8443
          CidrIp: !GetAtt VPCStack.Outputs.PrivateSubnet2ACIDR
  ElbTargetGroup:
    Type: AWS::ElasticLoadBalancingV2::TargetGroup
    Properties:
      Name: !Sub "${WAFServiceName}-ELB-TG"
      HealthCheckEnabled: True
      HealthCheckIntervalSeconds: 10
      HealthCheckPath: "/index.html"
      HealthCheckPort: "8080"
      HealthCheckProtocol: "HTTP"
      #HealthCheckTimeoutSeconds: 10
      HealthyThresholdCount: 3
      UnhealthyThresholdCount: 3
      TargetType: instance
      VpcId: !GetAtt VPCStack.Outputs.VPCID
      Port: 80
      Protocol: TCP
      Tags:
        - Key: "Name"
          Value: !Join
            - '-'
            - - !Ref WAFServiceName
              - !Ref EnvironmentName
              - "ELB-TG"
  ELB1:
    Type: AWS::ElasticLoadBalancingV2::LoadBalancer
    Properties:
      Name: !Sub ${WAFServiceName}-LB
      IpAddressType: ipv4
      Type: network
      Subnets: 
       - !GetAtt VPCStack.Outputs.PublicSubnet1ID
       - !GetAtt VPCStack.Outputs.PublicSubnet2ID
      Scheme: internet-facing ##internal <<- is other option
      #LoadBalancerAttributes:
        #- LoadBalancerAttributes
      Tags:  
        - Key: Name
          Value: !Sub "${EnvironmentName}-${WAFServiceName}-LB"
  ElbHttpListener:
    Type: 'AWS::ElasticLoadBalancingV2::Listener'
    Properties:
      LoadBalancerArn: !Ref ELB1
      Port: 80
      Protocol: TCP
      DefaultActions:
        - TargetGroupArn: !Ref ElbTargetGroup
          Type: forward
  BWAFAutoScalingS3AccessRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
        - Effect: Allow
          Principal:
            Service:
            - ec2.amazonaws.com
          Action:
          - sts:AssumeRole
      Path: "/"
      Policies:
      - PolicyName: BWAFAutoScalingS3AcccessPolicy
        PolicyDocument:
          Version: '2012-10-17'
          Statement:
          - Sid: ListBucket
            Effect: Allow
            Action:
            - s3:ListBucket
            Resource:
              - !Sub
                - arn:${AWS::Partition}:s3:::${Bucket}
                - Bucket: Ref ClusterBucket
              - !Sub
                - arn:${AWS::Partition}:s3:::${Bucket}
                - Bucket: Ref BootstrapBucket
          - Sid: GetObject
            Effect: Allow
            Action:
            - s3:PutObject
            - s3:GetObject
            - s3:DeleteObject
            Resource:
              - !Sub
                - arn:${AWS::Partition}:s3:::${Bucket}/*
                - Bucket: Ref ClusterBucket
              - !Sub
                - arn:${AWS::Partition}:s3:::${Bucket}/*
                - Bucket: Ref BootstrapBucket
      - PolicyName: CloudWatchLogsFullAccess
        PolicyDocument:
          Version: '2012-10-17'
          Statement:
          - Action:
            - logs:CreateLogStream
            - logs:DescribeLogStreams
            - logs:CreateLogGroup
            - logs:PutLogEvents
            - logs:PutRetentionPolicy
            Effect: Allow
            Resource: "*"
      - PolicyName: aws-quick-start-s3-policy
        PolicyDocument:
          Version: '2012-10-17'
          Statement:
            - Action:
                - s3:GetObject
              Resource:
                !Sub
                  - arn:${AWS::Partition}:s3:::${S3Bucket}/${QSS3KeyPrefix}*
                  - S3Bucket: !If [UsingDefaultBucket, !Sub '${QSS3BucketName}-${AWS::Region}', !Ref QSS3BucketName]
              Effect: Allow
  BWAFAutoScalingInstanceProfile:
    Type: AWS::IAM::InstanceProfile
    Properties:
      Path: "/"
      Roles:
      - Ref: BWAFAutoScalingS3AccessRole
  BWAFAutoScaleLaunchConfig:
    Type: AWS::AutoScaling::LaunchConfiguration
    Properties:
      InstanceMonitoring: true
      AssociatePublicIpAddress: true
      ImageId:
        Fn::FindInMap:
        - RegionMap
        - Ref: AWS::Region
        - ImageID
      InstanceType:
        Ref: WAFInstanceType
      IamInstanceProfile:
        Ref: BWAFAutoScalingInstanceProfile
      SecurityGroups:
      - Ref: BWAFSecurityGroup
      UserData:
        Fn::Base64:
          Fn::Join:
          - ""
          - - "#!/bin/bash\n"
            - "/opt/aws/bwaf/aws_autoscale.pl --command init-config"
            - " --stack "
            - Ref: AWS::StackName
            - " --resource BWAFAutoScaleLaunchConfig "
            - " --region "
            - Ref: AWS::Region
            - " --s3bucketname "
            - Ref: AutoScalingS3Bucket
            - " --config "
            - Fn::Join:
              - ":"
              - - Ref: WAFServiceName
                - Ref: WAFServicePort
                - !GetAtt ELB1.DNSName
                - Ref: AppServerPort
            - "\n\n"
            - 'Eula Options: '
            - " --signature "
            - Ref: AdministratorName
            - " --organization "
            - Ref: AdministratorCompany
            - " --email "
            - Ref: AdministratorEmailID
            - "\n"
  BWAFAutoScalingGroup:
    Type: AWS::AutoScaling::AutoScalingGroup
    Properties:
      MinSize:
        Ref: ScalingMinSize
      HealthCheckGracePeriod: 1200
      MaxSize:
        Ref: ScalingMaxSize
      VPCZoneIdentifier:
        - !GetAtt VPCStack.Outputs.PublicSubnet1ID
        - !GetAtt VPCStack.Outputs.PublicSubnet2ID
      LaunchConfigurationName:
        Ref: BWAFAutoScaleLaunchConfig
      TargetGroupARNs:
        - Ref: ElbTargetGroup
      HealthCheckType: EC2
    UpdatePolicy:
      AutoScalingRollingUpdate:
        PauseTime: PT10M
        MaxBatchSize: 1
        MinInstancesInService:
          Ref: ScalingMinSize
  BWAFScaleUpPolicy:
    Type: AWS::AutoScaling::ScalingPolicy
    Properties:
      ScalingAdjustment: 1
      Cooldown: '300'
      AutoScalingGroupName:
        Ref: BWAFAutoScalingGroup
      AdjustmentType: ChangeInCapacity
  BWAFScaleDownPolicy:
    Type: AWS::AutoScaling::ScalingPolicy
    Properties:
      ScalingAdjustment: -1
      Cooldown: '300'
      AutoScalingGroupName:
        Ref: BWAFAutoScalingGroup
      AdjustmentType: ChangeInCapacity
  NetworkInAlarmHigh:
    Type: AWS::CloudWatch::Alarm
    Properties:
      EvaluationPeriods: 5
      ComparisonOperator: GreaterThanOrEqualToThreshold
      Dimensions:
      - Name: AutoScalingGroupName
        Value:
          Ref: BWAFAutoScalingGroup
      AlarmActions:
      - Ref: BWAFScaleUpPolicy
      Statistic: Average
      Threshold: 9175040
      AlarmDescription: Scale-up if the NetworkIn throughput > 70% of max throughput
        for 5 minutes
      Namespace: AWS/EC2
      Period: 300
      MetricName: NetworkIn
  NetworkInAlarmLow:
    Type: AWS::CloudWatch::Alarm
    Properties:
      EvaluationPeriods: 5
      ComparisonOperator: LessThanOrEqualToThreshold
      Dimensions:
      - Name: AutoScalingGroupName
        Value:
          Ref: BWAFAutoScalingGroup
      AlarmActions:
      - Ref: BWAFScaleDownPolicy
      Statistic: Average
      Threshold: 5242880
      AlarmDescription: Scale-down if the NetworkIn throughput < 50% of max throughput
        for 10 periods of 15 minutes
      Namespace: AWS/EC2
      Period: 900
      MetricName: NetworkIn
  NetworkOutAlarmHigh:
    Type: AWS::CloudWatch::Alarm
    Properties:
      EvaluationPeriods: 5
      ComparisonOperator: GreaterThanOrEqualToThreshold
      Dimensions:
      - Name: AutoScalingGroupName
        Value:
          Ref: BWAFAutoScalingGroup
      AlarmActions:
      - Ref: BWAFScaleUpPolicy
      Statistic: Average
      Threshold: 9175040
      AlarmDescription: Scale-up if the NetworkOut throughput > 70% of max throughput
        for 5 minutes
      Namespace: AWS/EC2
      Period: 60
      MetricName: NetworkOut
  NetworkOutAlarmLow:
    Type: AWS::CloudWatch::Alarm
    Properties:
      EvaluationPeriods: 5
      ComparisonOperator: LessThanOrEqualToThreshold
      Dimensions:
      - Name: AutoScalingGroupName
        Value:
          Ref: BWAFAutoScalingGroup
      AlarmActions:
      - Ref: BWAFScaleDownPolicy
      Statistic: Average
      Threshold: 5242880
      AlarmDescription: Scale-down if the NetworkOut throughput < 50% of max throughput
        for 10 periods of 15 minutes
      Namespace: AWS/EC2
      Period: 900
      MetricName: NetworkOut
  CPUAlarmHigh:
    Type: AWS::CloudWatch::Alarm
    Properties:
      EvaluationPeriods: 5
      ComparisonOperator: GreaterThanOrEqualToThreshold
      Dimensions:
      - Name: AutoScalingGroupName
        Value:
          Ref: BWAFAutoScalingGroup
      AlarmActions:
      - Ref: BWAFScaleUpPolicy
      Statistic: Average
      Threshold: 85
      AlarmDescription: 'Scale out if WAF CPU > 85% after 5 successive intervals of
        60 seconds '
      Namespace: AWS/EC2
      Period: 60
      MetricName: CPUUtilization
  CPUAlarmNormal:
    Type: AWS::CloudWatch::Alarm
    Properties:
      EvaluationPeriods: 5
      ComparisonOperator: LessThanOrEqualToThreshold
      Dimensions:
      - Name: AutoScalingGroupName
        Value:
          Ref: BWAFAutoScalingGroup
      AlarmActions:
      - Ref: BWAFScaleDownPolicy
      Statistic: Average
      Threshold: 60
      AlarmDescription: Scale in WAF if CPU < 60% for 10 successive intervals of 15
        minutes
      Namespace: AWS/EC2
      Period: 900
      MetricName: CPUUtilization
